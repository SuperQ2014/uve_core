lua_shared_dict from_value 1m;

init_worker_by_lua '
    local delay = 0 
    local check
    check = function()
        local redis_t = require "resty.redis"
        local cjson = require "cjson"
        local redis = redis_t:new()
        redis:connect("127.0.0.1", 6379)

        local registered_froms, err = redis:smembers("registered_froms")
        if not err and registered_froms and registered_froms ~= ngx.null then
            for _, from in ipairs(registered_froms) do
                ngx.shared.from_value:set(from, nil)
                ngx.shared.from_value:set(from, 1)
            end
        else
            ngx.log(ngx.ERR, "redis doesn`t have registered_froms")
        end

        redis:close()
    end 

    local ok, err = ngx.timer.at(delay, check)
    if not ok then
        ngx.log(ngx.ERR, "failed to read redis: ", err)
    else
        ngx.log(ngx.INFO, "registered_froms loaded")
    end
';
